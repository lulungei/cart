

table {
    font-family: arial, sans-serif;
    border-collapse: collapse;
    width: 100%;
}

td, th {
    border: 1px solid #dddddd;
    text-align: left;
    padding: 8px;
}

tr:nth-child(even) {
    background-color: #dddddd;
}

* {
  box-sizing: border-box;
  
}

body {
  background-color: #f1f1f1;
}

#getPaidForm {
  background-color: #ffffff;
  margin: 100px auto;
  font-family: Raleway;
  padding: 40px;
  width: 70%;
  min-width: 500px;
 
}

h1 {
  text-align: center;  
}

input {
  padding: 10px;
  width: 70%;
  font-size: 17px;
  font-family: Raleway;
  border: 1px solid #aaaaaa;
}

/* Mark input boxes that gets an error on validation: */
input.invalid {
  background-color: #ffdddd;
}

/* Hide all steps by default: */
.tab {
  display: none;
}

button {
  background-color: #4CAF50;
  color: #ffffff;
  border: none;
  padding: 10px 20px;
  font-size: 17px;
  font-family: Raleway;
  cursor: pointer;

}

button:hover {
  opacity: 0.8;
}

#prevBtn {
  background-color: #bbbbbb;
}





/* Make circles that indicate the steps of the form: */
.step {
  height: 15px;
  width: 15px;
  margin: 0 2px;
  background-color: #bbbbbb;
  border: none;  
  border-radius: 50%;
  display: inline-block;
  opacity: 0.5;
}

.step.active {
  opacity: 1;
}

/* Mark the steps that are finished and valid: */
.step.finish {
  background-color: #4CAF50;
}


.column {
    float: left;
    width: 50%;
    padding: 10px;
    
}

.row:after {
    content: "";
    display: table;
    clear: both;
}

.card-wrapper {
	float:left;
}

.mpesa-heading {
	align: center;
}

.removeProduct {
	border:0;
	padding: 4px 8px;
	background-color: #c66;
	color: #fff;
	font-family: $font-bold;
	font-size: 12px;
	border-radius:3px;
}

#quantity {
	width: 20%;
}

.remove-product:hover {
	background-color: #a44;
}

.totals .totals-item {
  float: right;
  width: 90%;
  margin: bottom;
}

.totals .totals-item label {
  float:left;
  clear:both;
  width:79%;
  text-align:right;
	}

  .totals .totals-item .totals-value {
    float: right;
    width:21%;
    text-align: right;
  }

  .totals .totals-item-total {
    font-family : "HelveticaNeue-Medium", "Helvetica Neue Medium";
  }

#map {
  height:250px;
  width: 600px;
}
#description {
  font-family: Roboto;
  font-size: 15px;
  font-weight: 300;
}
 #infowindow-content .title {
  font-weight: bold;
 }

#infowindow-content {
display: none;

}

#map #infowindow-content {
  display: inline-block;
  width: 100px;
}

.pac-card {
  margin: 10px 10px 0 0;
  border-radius: 2px 0 0 2px;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  outline: none;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
  background-color: #fff;
  font-family: Roboto;
  
}

#pac-container {
  padding-bottom: 12px;
  margin-right: 12px;
  
}

.pac-controls {
  display: inline-block;
  padding: 5px 11px;
}

.pac-controls label {
  font-family: Roboto;
  font-size: 13px;
  font-weight: 300;
}

#pac-input {
  background-color: #fff;
  font-family: Roboto;
  font-size: 15px;
  font-weight: 300;
  margin-left: 12px;
  padding: 0 11px 0 13px;
  text-overflow: ellipsis;
  width: 400px;
}

#pac-input:focus {
  border-color: #4d90fe;
}

#title {
  color: #fff;
  background-color: #4d90fe;
  font-size: 25px;
  font-weight: 500;
  padding: 6px 12px;
}  

/*Mpesa modal background */

.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  padding-top: 100px; /* Location of the box */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/*Modal content */

.modal-content {
    background-color: #fefefe;
    margin: auto;
    padding: 20px;
    border: 1px solid #888;
    width: 20%;
    height:70%;
}

/* The Close Button */
.close {
    color: #aaaaaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}
